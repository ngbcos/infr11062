#!/usr/bin/env python
import optparse
import sys
from collections import defaultdict

optparser = optparse.OptionParser()
optparser.add_option("-k", "--kbest-list", dest="input", default="data/dev+test.100best", help="100-best translation lists")
optparser.add_option("-w", "--weights", dest="weights", default="", type="string", help="Parameter vector (default = 1^len(h))")
(opts, _) = optparser.parse_args()

weights = defaultdict(lambda: 1.0)
for pair in opts.weights.split():
  feat,w = pair.split('=')
  weights[feat] = float(w)

all_hyps = [hyp.split(' ||| ') for hyp in open(opts.input)]

all_feats = set()
for hyp in all_hyps:
  _, _, feats = hyp
  for feat in feats.split():
    k,_ = feat.split('=')
    all_feats.add(k)
sys.stderr.write('Weights:')
for feat in all_feats:
  sys.stderr.write(' %s=%g' % (feat, weights[feat]))
sys.stderr.write('\n')
    
num_sents = len(all_hyps) / 100
for s in xrange(0, num_sents):
  hyps_for_one_sent = all_hyps[s * 100:s * 100 + 100]
  (best_score, best) = (-1e300, '')
  for (num, hyp, feats) in hyps_for_one_sent:
    score = 0.0
    for feat in feats.split(' '):
      (k, v) = feat.split('=')
      score += weights[k] * float(v)
    if score > best_score:
      (best_score, best) = (score, hyp)
  try: 
    sys.stdout.write("%s\n" % best)
  except (Exception):
    sys.exit(1)

